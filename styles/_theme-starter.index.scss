
// TODO: this function doesn't belong here
@function kInlineImage-caret-down($fillColor) {
  @return url('data:image/svg+xml;utf8,<svg width="14" height="8" viewBox="0 0 14 8" xmlns="http://www.w3.org/2000/svg" xmlns:sketch="http://www.bohemiancoding.com/sketch/ns"><path d="M0 0l7 8 7-8h-14z" sketch:type="MSShapeGroup" fill="#{$fillColor}"/></svg>');
}


// general forms
.k-button,
input,
select {
  // padding top/bottom: (1.333[..]^2*18-18-2)/2/18
  // Then, adjusted to be more balanced since equal top/bottom would have balance on the top
  padding: 0.35em 0.6666em 0.3166em 0.6666em;
  margin: 0;
  border: 1px solid $k-color-F;

  border-radius: 0;
  background: #fff;
}

.k-button {
  box-shadow: inset 0px -1px 0px $k-color-F;
  &:active {
    background: blacken(#fff, 5%);
    box-shadow: none;
  }
}

select {
  padding-right: 28px; // 14 + 7*2 space so the text does not collide with the caret
  -webkit-appearance: none;

  cursor: pointer;
  background: #fff
    kInlineImage-caret-down($k-color-F)
    no-repeat
    calc(100% - 7px) 50%
    ;
}

// Accessibility :hover glow
.k-button:hover,
input:hover,
select:hover {
  // box-shadow: 0 0 3px $k-color-F;
}

// Accessibility :focus glow
.k-button:focus,
input:focus,
select:focus {
  position: relative;
  z-index: 2;
  //
  // box-shadow: inset 0 0 3px $k-color-A;
  border: 1px solid $k-color-A;

  // remove the default webkit glow without causing permanent damage
  // webkit default is -webkit-focus-ring-color. Other browsers might be
  // different. Leave it to the UA defaults
  outline-width: 0;
}

// k-inputGroup
.k-inputGroup {
  margin-bottom: 0.66666em;
}
.k-inputGroup__item--tag {
  border: 1px solid $k-color-F;
  background: whiten($k-color-G, 50%);
}
.k-inputGroup__item--block {
  // Keep the box model consistent with tags
  border: 1px solid transparent;
}


// border collapse management

// Prevent double borders by targeting form items that have something on their
// left. In effect, this consistently gives border to the higher layered elements (the ones
// that appear later) by allowing their borders be the dominant one that shows up.
// The later ones already cover the previous ones' box-shadow and outline glow.
// If the theme uses other colors for borders, an alternate way to do this is by
// setting margin-right to -1px;
//
// This does not get applied to full because full has the whole row. In
// [mobile first] responsive layouts from full to main, the consumer developer
// would simply remove border-right themself. This covers most use cases in which
// responsiveness goes from full to just a main item.
//
// TL;DR this removes border-right sizing on the right side of inputs with
// (supposedly) nothing on their right.
//
// EDIT: wait nvm the above is false. margin-right: -1px is much better than border-right: 0;
// Styles look better this way and are easier to reset
//
// EDIT2: Keep it simple and decouple from flex
// EDIT3: it is possible to make everything have a bit of negative margin and cancel it out
.k-inputGroup {
  padding-right: 1px;
  padding-bottom: 1px;
}
.k-inputGroup__item {
  margin-bottom: -1px;
  margin-right: -1px;
}

// We want things to line up in an input group when things get bigger
.k-inputGroup input,
.k-inputGroup select,
.k-inputGroup .k-button,
.k-inputGroup__item--tag,
.k-inputGroup__item--tagFlat {
  // padding left and right: in inputGroups, even the big items should line up
  padding-left: 12px;
  padding-right: 12px;
}

// reapply the padding on selects
.k-inputGroup select {
  padding-right: 28px;
}
